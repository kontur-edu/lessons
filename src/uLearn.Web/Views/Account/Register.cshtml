@using uLearn.Web.Extensions
@using Ulearn.Common
@using FormMethod = System.Web.Mvc.FormMethod
@model RegistrationViewModel
@{
	ViewBag.Title = "Регистрация";
}

@if (!Model.RegistrationFinished)
{
	<div class="container">
		<div class="row">
			<div class="col-md-offset-4 col-md-4">
				<h2>@ViewBag.Title</h2>

				<section id="socialLoginForm">
					@Html.Partial("../Login/ExternalLoginsListPartial", new ExternalLoginsListModel { Action = "ExternalLogin", ReturnUrl = ViewBag.ReturnUrl, Type = ExternalLoginListType.Registration })
				</section>

				<div class="strike-line grey">
					<span><i>или введите логин, почту и пароль</i></span>
				</div>

				<section class="login-and-registration-form">
					@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form", @class = "form-horizontal" }))
					{
						@Html.HiddenFor(m => m.ReturnUrl)
						@Html.AntiForgeryToken()
						<div class="form-group">
							@Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder = "Логин", autofocus = "autofocus" })
							@Html.ValidationMessageFor(m => m.UserName)
						</div>
						<div class="form-group">
							@Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Эл. почта" })
							@Html.ValidationMessageFor(m => m.Email)
						</div>
						<div class="form-group radio-form-group">
							<div class="control-label for-non-text-fields ib">Пол</div>
							<div class="pull-right">
								<div class="radio radio-default ib">
									@Html.RadioButtonFor(m => m.Gender, Gender.Male, new { id = "profile__gender__male" }) <label for="profile__gender__male">Мужской</label>
								</div>
								<div class="radio radio-default ib">
									@Html.RadioButtonFor(m => m.Gender, Gender.Female, new { id = "profile__gender__female" }) <label for="profile__gender__female">Женский</label>
								</div>
							</div>
							@Html.ValidationMessageFor(m => m.Gender)
						</div>
						<div class="form-group">
							@Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Пароль" })
							@Html.ValidationMessageFor(m => m.Password)
						</div>
						<div class="form-group">
							@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Ещё раз" })
							@Html.ValidationMessageFor(m => m.ConfirmPassword)
						</div>
						<div class="form-group">
							<div class="checkbox checkbox-default">
								@Html.CheckBoxFor(m => m.AgreeWithTerms)
								@* We can't use Html.LabelFor() here because display name for AgreeWithTerms is HTML, but Html.LabelFor() doesn't support this *@
								<label for="@Html.NameFor(m => m.AgreeWithTerms)">
									@Html.Raw(HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.AgreeWithTerms).ToString()))
								</label>
								@Html.ValidationMessageFor(m => m.AgreeWithTerms)
							</div>
						</div>

						@Html.UlearnValidationSummary(true)

						<div class="form-group">
							<input type="submit" value="Поехали" class="ph-btn ph-btn-green btn-block"/>
						</div>
					}
				</section>
			</div>
		</div>
	</div>
}
else
{
@section scripts {
	<script>
		$(document).ready(function() {
			window.yaCounter25997251.reachGoal('registration');
			window.location.replace("@Html.AttributeEncode(Model.ReturnUrl)");
		});
	</script>
}}