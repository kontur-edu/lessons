@* Generator: MvcHelper GeneratePrettyNames: true DisableLinePragmas: true *@
@using Database.Models
@using Microsoft.AspNet.Identity
@using uLearn.Web.Extensions
@using uLearn.Web.Views.Shared
@using Ulearn.Common
@using Ulearn.Common.Extensions
@using Ulearn.Core
@using Ulearn.Core.Courses
@using Ulearn.Core.Courses.Slides
@using Ulearn.Core.Courses.Slides.Exercises
@using Ulearn.Core.Courses.Slides.Quizzes
@using Ulearn.Core.Extensions
@using HtmlHelper = System.Web.Mvc.HtmlHelper

@functions
{

	private static string GetSlideUrl(UrlHelper Url, Course course, Slide slide)
	{
		return Url.RouteUrl("Course.SlideById", new { courseId = course.Id, slideId = slide.Url });
	}

	private static IHtmlString CollapseIfNeed(bool collapse, HtmlHelper Html, string text, int truncateMaxLength, bool renderSimpleMarkdown=false)
	{
		var encodedText = Html.EncodeMultiLineText(text);
		if (renderSimpleMarkdown)
			encodedText = encodedText.RenderSimpleMarkdown();
		if (collapse)
			encodedText = encodedText.TruncateHtmlWithEllipsis(truncateMaxLength);
		return Html.Raw(collapse ? encodedText : Html.HighlightLink(encodedText));
	}

}

@helper SlideLink(UrlHelper Url, Course course, Slide slide)
{
	<a href="@GetSlideUrl(Url, course, slide)">@slide.Title.TruncateWithEllipsis(40)</a>
}

@helper UserName(ApplicationUser user)
{
	<span class="notifications__notification__user">@user.VisibleName</span>
}

@helper Notification(SystemMessageNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__system-message-notification without-link media">
		<div class="media-left">
		</div>
		<div class="media-body">
			<div class="">@CollapseIfNeed(collapse, Html, notification.Text, 100)</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(InstructorMessageNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__instructor-message-notification without-link media">
		<div class="media-left">
			@UserAvatar.Avatar(notification.InitiatedBy)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">@UserName(notification.InitiatedBy):</div>
			<div class="">@CollapseIfNeed(collapse, Html, notification.Text, 100)</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(NewCommentNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	var slide = course.GetSlideById(notification.Comment.SlideId);
	<div class="notifications__new-comment-notification media" data-href="@GetSlideUrl(Url, course, slide)#comment-@notification.Comment.Id">
		<div class="media-left">
			@UserAvatar.Avatar(notification.Comment.Author)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">
				@UserName(notification.Comment.Author)
				<span class="notifications__notification__subheader">к&nbsp;слайду @SlideLink(Url, course, slide)</span>
			</div>
			<div title="@notification.Comment.Text.TruncateWithEllipsis(200)" class="notifications__comment-notification__text">@CollapseIfNeed(collapse, Html, notification.Comment.Text, 100, renderSimpleMarkdown: true)</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(NewCommentFromYourGroupStudentNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	var slide = course.GetSlideById(notification.Comment.SlideId);
	<div class="notifications__new-comment-from-your-group-student-notification media" data-href="@GetSlideUrl(Url, course, slide)#comment-@notification.Comment.Id">
		<div class="media-left">
			@UserAvatar.Avatar(notification.Comment.Author)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">
				@UserName(notification.Comment.Author)
				<span class="notifications__notification__subheader">к&nbsp;слайду @SlideLink(Url, course, slide)</span>
			</div>
			<div title="@notification.Comment.Text.TruncateWithEllipsis(200)" class="notifications__comment-notification__text">@CollapseIfNeed(collapse, Html, notification.Comment.Text, 100, renderSimpleMarkdown: true)</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(RepliedToYourCommentNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	var slide = course.GetSlideById(notification.Comment.SlideId);
	<div class="notifications__replied-to-your-comment-notification media" data-href="@GetSlideUrl(Url, course, slide)#comment-@notification.Comment.Id">
		<div class="media-left">
			@UserAvatar.Avatar(notification.Comment.Author)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">
				@UserName(notification.Comment.Author) ответил@(notification.Comment.Author.Gender.ChooseEnding()) на&nbsp;ваш комментарий
				<span title="@notification.ParentComment.Text.TruncateWithEllipsis(200)" class="notifications__comment-notification__cite">@CollapseIfNeed(collapse, Html, notification.ParentComment.Text, 50, renderSimpleMarkdown: true)</span>
			</div>
			<div title="@notification.Comment.Text.TruncateWithEllipsis(200)" class="notifications__comment-notification__text">@CollapseIfNeed(collapse, Html, notification.Comment.Text, 100, renderSimpleMarkdown: true)</div>
			<div class="notifications__notification__footer">
				к&nbsp;слайду @SlideLink(Url, course, slide)
				<span title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</span>
			</div>
		</div>
	</div>
}

@helper Notification(LikedYourCommentNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	var slide = course.GetSlideById(notification.Comment.SlideId);
	<div class="notifications__liked-your-comment-notification media" data-href="@GetSlideUrl(Url, course, slide)#comment-@notification.Comment.Id">
		<div class="media-left">
			@UserAvatar.Avatar(notification.LikedUser)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">@UserName(notification.LikedUser) лайкнул@(notification.LikedUser.Gender.ChooseEnding()) ваш комментарий</div>
			<div title="@notification.Comment.Text.TruncateWithEllipsis(200)" class="notifications__comment-notification__text">@CollapseIfNeed(collapse, Html, notification.Comment.Text, 100, renderSimpleMarkdown: true)</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(PassedManualExerciseCheckingNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	var slide = (ExerciseSlide)course.GetSlideById(notification.Checking.SlideId);
	<div class="notifications__passed-manual-execise-checking-notification media" data-href="@GetSlideUrl(Url, course, slide)">
		<div class="media-left">
			@UserAvatar.Avatar(notification.InitiatedBy)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">@UserName(notification.InitiatedBy) @(notification.IsRecheck ? "пере" : "")проверил@(notification.InitiatedBy.Gender.ChooseEnding()) ваше решение<br/>по&nbsp;«@slide.Title.MakeNestedQuotes()»
			</div>
			<div class="notifications__notification__score">Вы получили @notification.Checking.Score из @slide.Scoring.CodeReviewScore.PluralizeInRussian(RussianPluralizationOptions.Score)</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(PassedManualQuizCheckingNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	var slide = (QuizSlide)course.GetSlideById(notification.Checking.SlideId);
	<div class="notifications__passed-manual-quiz-checking-notification media" data-href="@GetSlideUrl(Url, course, slide)">
		<div class="media-left">
			@UserAvatar.Avatar(notification.InitiatedBy)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">@UserName(notification.InitiatedBy) проверил@( notification.InitiatedBy.Gender.ChooseEnding()) ваш тест<br/>«@slide.Title.MakeNestedQuotes()»
			</div>
			<div class="notifications__notification__score">Вы получили @notification.Checking.Score из @slide.MaxScore.PluralizeInRussian(RussianPluralizationOptions.ScoreDative)</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(ReceivedCertificateNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__received-certificate-notification media" data-href="@Url.RouteUrl("Certificate", new { certificateId = notification.CertificateId })">
		<div class="media-left">
			@UserAvatar.Avatar(notification.InitiatedBy)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">Поздравляем! Вы получили сертификат по&nbsp;курсу «@course.Title.MakeNestedQuotes()»</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(ReceivedAdditionalScoreNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	var unit = course.GetUnitById(notification.Score.UnitId);
	var scoringGroup = unit.Scoring.Groups[notification.Score.ScoringGroupId];
	<div class="notifications__received-additional-score-notification without-link media">
		<div class="media-left">
			@UserAvatar.Avatar(notification.InitiatedBy)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">@UserName(notification.InitiatedBy) поставил@( notification.InitiatedBy.Gender.ChooseEnding()) вам баллы <b>@scoringGroup.Name</b> в&nbsp;модуле «@unit.Title.MakeNestedQuotes()»
			</div>
			<div class="notifications__notification__score">Вы получили @notification.Score.Score из @scoringGroup.MaxAdditionalScore.PluralizeInRussian(RussianPluralizationOptions.ScoreDative)</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(ReceivedCommentToCodeReviewNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	var slide = course.GetSlideById(notification.Comment.Review.ExerciseChecking.SlideId);
	<div class="notifications__received-comment-to-code-review-notification media" data-href="@notification.GetUrl(course, "", User.Identity.GetUserId())">
        <div class="media-left">
            @UserAvatar.Avatar(notification.InitiatedBy)
        </div>
        <div class="media-body">
            <div class="notifications__notification__header">@UserName(notification.InitiatedBy) прокомментировал@( notification.InitiatedBy.Gender.ChooseEnding()) код-ревью задания «@slide.Title.MakeNestedQuotes()»
            </div>
            <div title="@notification.Comment.Text.TruncateWithEllipsis(200)" class="notifications__comment-notification__text">@CollapseIfNeed(collapse, Html, notification.Comment.Text, 100, renderSimpleMarkdown: true)</div>
            <div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
        </div>
    </div>
}

@helper Notification(JoinedToYourGroupNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__joined-to-your-group-notification media" data-href="@Url.Action("Groups", "Admin", new { courseId = notification.CourseId })">
		<div class="media-left">
			@UserAvatar.Avatar(notification.JoinedUser)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">@UserName(notification.JoinedUser) присоедини@( notification.JoinedUser.Gender.ChooseEnding("лся", "лась")) к&nbsp;вашей группе <b>«@notification.Group.Name»</b>
			</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(GrantedAccessToGroupNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__granted-access-to-group-notification media" data-href="@Url.Action("Groups", "Admin", new { courseId = notification.CourseId })">
		<div class="media-left">
			@UserAvatar.Avatar(notification.Access.User)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">
				@UserName(notification.Access.GrantedBy) назначил@(notification.Access.GrantedBy.Gender.ChooseEnding()) вас преподавателем группы <b>«@notification.Access.Group.Name.MakeNestedQuotes()»</b> в&nbsp;курсе «@course.Title.MakeNestedQuotes()».
			</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(RevokedAccessToGroupNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__revoked-access-to-group-notification media" data-href="@Url.Action("Groups", "Admin", new { courseId = notification.CourseId })">
		<div class="media-left">
			@UserAvatar.Avatar(notification.Access.User)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">
				Вы перестали быть преподавателем группы <b>«@notification.Access.Group.Name.MakeNestedQuotes()»</b> в курсе «@course.Title.MakeNestedQuotes()».
			</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(GroupMemberHasBeenRemovedNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__group-member-has-been-removed-notification media" data-href="@Url.Action("Groups", "Admin", new { courseId = notification.CourseId })">
		<div class="media-left">
			@UserAvatar.Avatar(notification.InitiatedBy)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">
				@UserName(notification.InitiatedBy) удалил@(notification.InitiatedBy.Gender.ChooseEnding()) студента @notification.User.VisibleName из группы <b>«@notification.Group.Name.MakeNestedQuotes()»</b> в курсе «@course.Title.MakeNestedQuotes()».
			</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(GroupMembersHaveBeenRemovedNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__group-members-have-been-removed-notification media" data-href="@Url.Action("Groups", "Admin", new { courseId = notification.CourseId })">
        <div class="media-left">
            @UserAvatar.Avatar(notification.InitiatedBy)
        </div>
        <div class="media-body">
            <div class="notifications__notification__header">
                @UserName(notification.InitiatedBy) удалил@(notification.InitiatedBy.Gender.ChooseEnding()) @notification.UsersCount.PluralizeInRussian(RussianPluralizationOptions.StudentsDative)
                из группы&nbsp;<b>«@notification.Group.Name.MakeNestedQuotes()»</b> в&nbsp;курсе «@course.Title.MakeNestedQuotes()»: @notification.UserDescriptions.
            </div>
            <div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
        </div>
    </div>
}

@helper Notification(GroupMembersHaveBeenAddedNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__group-members-have-been-added-notification media" data-href="@Url.Action("Groups", "Admin", new { courseId = notification.CourseId })">
        <div class="media-left">
            @UserAvatar.Avatar(notification.InitiatedBy)
        </div>
        <div class="media-body">
            <div class="notifications__notification__header">
                @UserName(notification.InitiatedBy) добавил@(notification.InitiatedBy.Gender.ChooseEnding()) @notification.UsersCount.PluralizeInRussian(RussianPluralizationOptions.StudentsDative)
                в группу&nbsp;<b>«@notification.Group.Name.MakeNestedQuotes()»</b> в&nbsp;курсе «@course.Title.MakeNestedQuotes()»: @notification.UserDescriptions.
            </div>
            <div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
        </div>
    </div>
}

@helper Notification(NewCommentForInstructorsOnlyNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	var slide = course.GetSlideById(notification.Comment.SlideId);
	<div class="notifications__new-comment-for-instructors-only-notification media" data-href="@GetSlideUrl(Url, course, slide)#comment-@notification.Comment.Id">
        <div class="media-left">
            @UserAvatar.Avatar(notification.Comment.Author)
        </div>
        <div class="media-body">
            <div class="notifications__notification__header">
                @UserName(notification.Comment.Author)
                <span class="notifications__notification__subheader">к&nbsp;слайду @SlideLink(Url, course, slide)</span>
            </div>
            <div class="comments-for-instructors-only__description">Комментарий для преподавателей:</div>
            <div title="@notification.Comment.Text.TruncateWithEllipsis(200)" class="notifications__comment-notification__text">@CollapseIfNeed(collapse, Html, notification.Comment.Text, 100, renderSimpleMarkdown: true)</div>
            <div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
        </div>
    </div>
}

@helper Notification(AddedInstructorNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__added-instructor-notification media" data-href="@Url.Action("Users", "Admin", new { courseId = notification.CourseId })">
		<div class="media-left">
			@UserAvatar.Avatar(notification.AddedUser)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">@UserName(notification.AddedUser) стал@(notification.AddedUser.Gender.ChooseEnding()) преподавателем курса «@course.Title.MakeNestedQuotes()»</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(CreatedGroupNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__created-group-notification media" data-href="@Url.Action("Groups", "Admin", new { courseId = notification.CourseId })">
		<div class="media-left">
			@UserAvatar.Avatar(notification.InitiatedBy)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">@UserName(notification.InitiatedBy) создал@(notification.InitiatedBy.Gender.ChooseEnding()) группу «@notification.Group.Name.MakeNestedQuotes()» в&nbsp;курсе «@course.Title.MakeNestedQuotes()»</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(UploadedPackageNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__uploaded-package-notification media" data-href="@Url.Action("Packages", "Admin", new { courseId = notification.CourseId })">
		<div class="media-left">
			@UserAvatar.Avatar(notification.InitiatedBy)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">@UserName(notification.InitiatedBy) загрузил@( notification.InitiatedBy.Gender.ChooseEnding()) новую версию курса «@course.Title.MakeNestedQuotes()»</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(NotUploadedPackageNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__notuploaded-package-notification media" data-href="@GitUtils.RepoUrlToCommitLink(notification.RepoUrl, notification.CommitHash)">
		<div class="media-left">
			@UserAvatar.Avatar(notification.InitiatedBy)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">Ошибка загрузки новой версии курса «@course.Title.MakeNestedQuotes()». Коммит @notification.CommitHash.Substring(0, 8)</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(PublishedPackageNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__published-package-notification media" data-href="@Url.Action("Packages", "Admin", new { courseId = notification.CourseId })">
		<div class="media-left">
			@UserAvatar.Avatar(notification.InitiatedBy)
		</div>
		<div class="media-body">
			<div class="notifications__notification__header">@UserName(notification.InitiatedBy) опубликовал@( notification.InitiatedBy.Gender.ChooseEnding()) новую версию курса «@course.Title.MakeNestedQuotes()»</div>
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}

@helper Notification(CourseExportedToStepikNotification notification, Course course, HtmlHelper Html, UrlHelper Url, bool collapse = true)
{
	<div class="notifications__course-exported-to-stepik-notification media" data-href="@Url.Action("Process", "Stepik", new { courseId = course.Id, processId = notification.ProcessId })">
		<div class="media-left">
			@UserAvatar.Avatar(notification.InitiatedBy)
		</div>
		<div class="media-body">
			@if (notification.Process.IsSuccess)
			{
				<div class="notifications__notification__header">Курс <b>«@course.Title.MakeNestedQuotes()»</b> успешно экспортирован на&nbsp;Степик. Нажмите для&nbsp;подробностей.</div>
			}
			else
			{
				<div class="notifications__notification__header">Произошла ошибка при копировании курса <b>«@course.Title»</b> на&nbsp;Степик. Нажмите для&nbsp;подробностей.</div>
			}
			<div class="notifications__notification__footer" title="@notification.CreateTime.ToPrettyString()">@notification.CreateTime.ToAgoPrettyString()</div>
		</div>
	</div>
}