@* Generator: MvcHelper GeneratePrettyNames: true DisableLinePragmas: true *@

@using System.Globalization
@using uLearn.Web.Views.Course
@using Ulearn.Core.Courses
@model TocModel

<div class="side-bar navbar-collapse collapse navbar-nav container">

	@Toc(Model)

	@if (Model.NextUnitTime < DateTime.MaxValue)
	{
		<div class="units-list-item">
			<div class="label label-info">Следующий модуль — @Model.NextUnitTime.ToString("dd MMMM", CultureInfo.CreateSpecificCulture("ru"))</div>
		</div>
	}

</div>


@helper Toc(TocModel toc)
{
	<ul class="nav">
		<li class="units-list-item full-width units-list-item-text course-name">
			<a data-score="@SlideHtml.ShowScore(toc.Score, toc.MaxScore)">@toc.Course.Title</a>
		</li>
		@foreach (var group in toc.GroupsForStatistics)
		{
			<li class="full-width group-statistics-link">
				<a href="@group.StatisticsUrl"><span class="fa fa-list"></span>Ведомость @group.GroupName</a>
			</li>
		}
		@{
			int iUnit = 0;
			foreach (var unit in toc.Units)
			{
				@TocUnit(unit, iUnit)
				iUnit++;
			}
		}
	</ul>
}

@helper TocUnit(TocUnitModel unit, int index)
{
	var collapseOption = unit.IsCurrent ? "collapse in" : "collapse";
	<li class="units-list-item clickable full-width">
		<a data-toggle="collapse" href=@( "#N" + index) class="units-list-item-text no-smooth-scrolling" data-score="@SlideHtml.ShowScore(unit.Score, unit.MaxScore)">@unit.UnitName</a>
		<ul id=@( "N" + index) class="slides-list @collapseOption">
			@foreach (var page in unit.Pages)
			{
				@TocItem(page)
			}
			@foreach (var kv in unit.AdditionalScores)
			{
				var scoringGroup = kv.Key;
				var score = kv.Value;
				@TocAdditionalScore(scoringGroup, score)
			}
		</ul>
	</li>
}

@helper TocItem(TocPageInfo page)
{
	<a href="@page.Url" class="@(page.IsCurrent ? "selected" : "")">
        <span class="slide-list-item clickable full-size" data-slide-id="@page.SlideId">
            <i class="@GetPageIconClass(page) navbar-label" title="@GetTocPageTytle(page.PageType)"></i>
            <span class="underline-on-parent-hover" style="margin-right: 5px">@page.Name</span>
            <span class="score right">@SlideHtml.ShowScore(page.Score, page.MaxScore)</span>
        </span>
    </a>
}

@helper TocAdditionalScore(ScoringGroup group, int score)
{
	<li class="slide-list-item full-size">
		<i class="navbar-label" title=""></i>
		<span style="margin-right: 5px">@group.Name</span>
		<span class="score right">@SlideHtml.ShowScore(score, group.MaxAdditionalScore)</span>
	</li>
}

@functions
{

	private static string GetTocPageTytle(TocPageType pageType)
	{
		if (pageType == TocPageType.Theory)
			return "Теория";
		if (pageType == TocPageType.Exercise)
			return "Задача";
		if (pageType == TocPageType.Quiz)
			return "Тест";
		return "";
	}

}

@helper GetPageIconClass(TocPageInfo page)
{
	string progressClass;
	string typeClass;
	if (page.PageType == TocPageType.InstructorNotes || page.PageType == TocPageType.UnitStatistics)
	{
		typeClass = "glyphicon-eye-close";
		progressClass = "navbar-label-privileged";
	}
	else
	{
		var isComplete = !page.ShouldBeSolved || page.IsSolved;
		progressClass = isComplete ? "navbar-label-success"
			: (page.IsVisited ? "navbar-label-danger" : "navbar-label-default");
		typeClass = page.PageType == TocPageType.Quiz ? "glyphicon-pushpin"
			: page.PageType == TocPageType.Exercise ? (isComplete ? "glyphicon-check" : "glyphicon-edit")
				: (page.IsVisited ? "glyphicon-ok" : "glyphicon-none");
	}
	@( progressClass + " glyphicon " + typeClass)
}
