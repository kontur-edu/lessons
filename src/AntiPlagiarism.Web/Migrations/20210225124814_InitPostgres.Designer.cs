// <auto-generated />
using System;
using AntiPlagiarism.Web.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AntiPlagiarism.Web.Migrations
{
    [DbContext(typeof(AntiPlagiarismDb))]
    [Migration("20210225124814_InitPostgres")]
    partial class InitPostgres
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("antiplagiarism")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("Token")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("Token", "IsEnabled");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.Code", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.ManualSuspicionLevels", b =>
                {
                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.Property<double?>("FaintSuspicion")
                        .HasColumnType("double precision");

                    b.Property<double?>("StrongSuspicion")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("TaskId");

                    b.ToTable("ManualSuspicionLevels");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.MostSimilarSubmission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .HasColumnType("integer");

                    b.Property<int>("SimilarSubmissionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("SubmissionId");

                    b.HasIndex("SimilarSubmissionId");

                    b.HasIndex("Timestamp");

                    b.ToTable("MostSimilarSubmissions");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.OldSubmissionsInfluenceBorder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("OldSubmissionsInfluenceBorder");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.Snippet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Hash")
                        .HasColumnType("integer");

                    b.Property<short>("SnippetType")
                        .HasColumnType("smallint");

                    b.Property<int>("TokensCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TokensCount", "SnippetType", "Hash")
                        .IsUnique();

                    b.ToTable("Snippets");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.SnippetOccurence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("FirstTokenIndex")
                        .HasColumnType("integer");

                    b.Property<int>("SnippetId")
                        .HasColumnType("integer");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SnippetId", "SubmissionId");

                    b.HasIndex("SubmissionId", "FirstTokenIndex");

                    b.HasIndex("SubmissionId", "SnippetId");

                    b.ToTable("SnippetsOccurences");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.SnippetStatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AuthorsCount")
                        .HasColumnType("integer");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<int>("SnippetId")
                        .HasColumnType("integer");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SnippetId", "TaskId", "ClientId")
                        .IsUnique();

                    b.ToTable("SnippetsStatistics");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AddingTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("ClientSubmissionId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<short>("Language")
                        .HasColumnType("smallint");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.Property<int>("TokensCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AddingTime");

                    b.HasIndex("ProgramId");

                    b.HasIndex("ClientId", "ClientSubmissionId");

                    b.HasIndex("ClientId", "TaskId");

                    b.HasIndex("ClientId", "TaskId", "AuthorId");

                    b.HasIndex("ClientId", "TaskId", "AddingTime", "AuthorId");

                    b.HasIndex("ClientId", "TaskId", "Language", "AuthorId");

                    b.HasIndex("ClientId", "TaskId", "AddingTime", "Language", "AuthorId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.TaskStatisticsParameters", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Deviation")
                        .HasColumnType("double precision");

                    b.Property<double>("Mean")
                        .HasColumnType("double precision");

                    b.Property<int>("SubmissionsCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("TaskId");

                    b.ToTable("TasksStatisticsParameters");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.TaskStatisticsSourceData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Submission1Id")
                        .HasColumnType("integer");

                    b.Property<int>("Submission2Id")
                        .HasColumnType("integer");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("Submission1Id");

                    b.HasIndex("Submission2Id");

                    b.ToTable("TaskStatisticsSourceData");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.WorkQueueItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("QueueId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TakeAfterTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("QueueId", "TakeAfterTime");

                    b.ToTable("WorkQueueItems");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.MostSimilarSubmission", b =>
                {
                    b.HasOne("AntiPlagiarism.Web.Database.Models.Submission", "SimilarSubmission")
                        .WithMany()
                        .HasForeignKey("SimilarSubmissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AntiPlagiarism.Web.Database.Models.Submission", "Submission")
                        .WithMany()
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SimilarSubmission");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.SnippetOccurence", b =>
                {
                    b.HasOne("AntiPlagiarism.Web.Database.Models.Snippet", "Snippet")
                        .WithMany()
                        .HasForeignKey("SnippetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AntiPlagiarism.Web.Database.Models.Submission", "Submission")
                        .WithMany()
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Snippet");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.SnippetStatistics", b =>
                {
                    b.HasOne("AntiPlagiarism.Web.Database.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AntiPlagiarism.Web.Database.Models.Snippet", "Snippet")
                        .WithMany()
                        .HasForeignKey("SnippetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Snippet");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.Submission", b =>
                {
                    b.HasOne("AntiPlagiarism.Web.Database.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AntiPlagiarism.Web.Database.Models.Code", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("AntiPlagiarism.Web.Database.Models.TaskStatisticsSourceData", b =>
                {
                    b.HasOne("AntiPlagiarism.Web.Database.Models.Submission", "Submission1")
                        .WithMany()
                        .HasForeignKey("Submission1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AntiPlagiarism.Web.Database.Models.Submission", "Submission2")
                        .WithMany()
                        .HasForeignKey("Submission2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Submission1");

                    b.Navigation("Submission2");
                });
#pragma warning restore 612, 618
        }
    }
}
