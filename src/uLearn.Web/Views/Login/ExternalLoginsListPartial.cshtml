@model ExternalLoginsListModel
@using Microsoft.Owin.Security
@using uLearn.Web.Kontur.Passport

@{
	var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes().Where(
		x => x.AuthenticationType != "LTI" && (!Model.AvailableProviders.Any() || Model.AvailableProviders.Contains(x.AuthenticationType))
		).OrderBy(x => x.AuthenticationType).ToList();

	if (!loginProviders.Any())
	{
		<div>

		</div>
	}
	else
	{
		var action = Model.Action;
		var returnUrl = Model.ReturnUrl;
		using (Html.BeginForm(action, "Login", new { ReturnUrl = returnUrl }))
		{
			@Html.AntiForgeryToken()
			<div id="socialLoginList">
				<p>
					@foreach (var p in loginProviders)
					{
						if (Model.Type == ExternalLoginListType.Login || Model.Type == ExternalLoginListType.Registration)
						{
							if (p.AuthenticationType == KonturPassportConstants.AuthenticationType)
							{
								<div class="strike-line grey">
									<span><i>или войдите как сотрудник Контура</i></span>
								</div>
							}
							<button type="submit" class="ph-btn ph-btn-blue btn-block" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Войдите, используя ваш аккаунт @p.Caption">
								Войти через @p.AuthenticationType
							</button>
						}
						else if (Model.Type == ExternalLoginListType.Link)
						{
							if (Model.UserLogins.Any(l => l.LoginProvider == p.AuthenticationType))
							{
								continue;
							}
							<button type="submit" class="btn btn-primary ib" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Привязать аккаунт @p.Caption">
								Привязать @p.AuthenticationType
							</button>
						}
					}
				</p>
			</div>
		}
	}
}
