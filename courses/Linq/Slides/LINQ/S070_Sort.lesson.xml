<?xml version='1.0' encoding='UTF-8'?>
<slide xmlns="https://ulearn.me/schema/v2" title="OrderBy и Distinct" id="{CA6CAD1F-8352-4041-9233-DFF70ED3AB05}">
  <defaultIncludeCodeFile>Sort.cs</defaultIncludeCodeFile>
  <markdown>
		Для сортировки последовательности в `LINQ` имеется четыре метода:
	</markdown>
  <code>
		IOrderedEnumerable&lt;T&gt; OrderBy&lt;T&gt;(this IEnumerable&lt;T&gt; items, Func&lt;T, K&gt; keySelector)
		IOrderedEnumerable&lt;T&gt; OrderByDescending&lt;T&gt;(this IEnumerable&lt;T&gt; items, Func&lt;T, K&gt; keySelector)
		IOrderedEnumerable&lt;T&gt; ThenBy&lt;T&gt;(this IOrderedEnumerable&lt;T&gt; items, Func&lt;T, K&gt; keySelector)
		IOrderedEnumerable&lt;T&gt; ThenByDescending&lt;T&gt;(this IOrderedEnumerable&lt;T&gt; items, Func&lt;T, K&gt; keySelector)
	</code>
  <markdown>
		Первые два дают на выходе последовательность, упорядоченную по возрастанию/убыванию ключей.
		А `keySelector` — это как раз функция, которая каждому элементу последовательности ставит
		в соответствие некоторый ключ, по которому его будут сравнивать при сортировке.
	</markdown>
  <includeCode>
    <display onlyBody="true">Test1</display>
  </includeCode>
  <markdown>
		Если при равенстве ключей вы хотите отсортировать элементы по другому критерию, 
		на помощь приходит метод ThenBy.

		Например, в следующем примере все имена сортируются по убыванию длин, а при равных длинах — лексикографически.
		</markdown>
  <includeCode>
    <display onlyBody="true">Test2</display>
  </includeCode>
  <markdown>
		Чтобы убрать из последовательности все повторяющиеся элементы, можно воспользоваться функцией `Distinct`.
		</markdown>
  <includeCode>
    <display onlyBody="true">TestDistinct</display>
  </includeCode>
</slide>
