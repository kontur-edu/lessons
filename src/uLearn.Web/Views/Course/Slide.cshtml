@using uLearn
@using uLearn.Model.Blocks
@using uLearn.Quizes
@using uLearn.Web.Views.Course
@model CoursePageModel

@{
	ViewBag.Title = Model.CourseTitle;
	ViewBag.Slide = Model.Slide;
	var blocks = Model.Slide.Blocks.Where(b => !(b is ExerciseBlock)).ToList();
}

@Html.Action("TableOfContents", "SlideNavigation", new { courseId = Model.CourseId, slideIndex = Model.Slide.Index })

<div class="slide-container">
	<div class="container body-content">
		<div class="row">
			<div class='slide'>
				<h1>@Model.Slide.Title <span class="score">@GetScore(Model.Score)</span></h1>
				@if (Model.Slide is QuizSlide)
				{
					@Html.Action("Quiz", "Quiz", new
					{
						slide = Model.Slide as QuizSlide,
						courseId = Model.CourseId,
						userId = Model.UserId,
						isGuest = Model.IsGuest
					})
				}
				else
				{
					@Html.DisplayFor(m => blocks)
				}
				@if (Model.Slide is ExerciseSlide)
				{
					@SlideHtml.Block(((ExerciseSlide)Model.Slide).Exercise, Model.BlockRenderContext)
				}
				@if (!Model.IsGuest)
				{
					@Html.Partial("_AskBar")
				}
			</div>
			@if (User.HasAccessFor(Model.CourseId, CourseRoles.Tester))
			{
				using (Html.BeginForm("ForgetAll", "Course"))
				{
					<input type="hidden" name="slideId" value="@Model.Slide.Id" />
					<input type="hidden" name="courseId" value="@Model.CourseId" />
					<button class="btn btn-danger" type="submit">Удалить прогресс</button>
				}
			}
			@if (!Model.IsGuest)
			{
				@Html.Partial("_RatesBar")
			}
			else
			{
				@Html.Partial("_LoginForContinue")
			}
			@Html.Action("PrevNextButtons", "SlideNavigation", new { courseId = Model.CourseId, slideIndex = Model.Slide.Index, onSolutionsSlide = false })
		</div>
	</div>
</div>
@if (Model.IsFirstCourseVisit)
{	
	@Html.Action("SelectGroup")
}
@section scripts{
	@if (!Model.IsGuest)
	{
		<script>
			fillRate('@Model.Rate');
			$("#selectGroupModal").modal();
			displayVisits();
			uploadVisits("@Url.Action("Upload", "Visits")");
		</script>
	}
	else
	{
		<script>
			saveVisits("@Model.Slide.Id", "@DateTime.Now.ToString("u")");
			displayVisits();
		</script>
	}
	@if (Model.Slide is ExerciseSlide)
	{
		var e = (ExerciseSlide)Model.Slide;
		ExerciseBlockData data = Model.BlockRenderContext.GetBlockData(e.Exercise);
		<script>
			getHints("@Model.CourseId", "@Model.Slide.Index", '@e.Exercise.HintsMd.Count')
		</script>
		<script> refreshPreviousDraft('@(data.LatestAcceptedSolution != null)', '@e.Id') </script>
	}
}

@helper GetScore(Tuple<int, int> score)
{
	@(score.Item2 == 0 ? "" : string.Format("{0}/{1}", score.Item1, score.Item2))
}