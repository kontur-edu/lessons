@using uLearn
@using uLearn.Web.Extensions
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>@ViewBag.Title &bull; ulearn</title>
	<meta name="title" content="@ViewBag.Title на ulearn.me"/>
	<meta name="og:title" content="@ViewBag.Title на ulearn.me"/>
	<meta name="og:image" content="~/Content/logo.png" />
	<meta name="description" content="Интерактивные учебные онлайн курсы по программированию" />
	<link rel="image_src" href="~/Content/logo.png">
	<link rel="shortcut icon" href="~/favicon.ico?v=4" />
	@Styles.Render("~/css")
	@Scripts.Render("~/modernizr-js")
</head>
<body>
	<div id="header" class="navbar navbar-inverse navbar-fixed-top">
		<button type="button" class="navbar-toggle hide-side-bar-button" data-toggle="collapse" data-target=".side-bar">
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
		</button>
		<div class="container">
			<div class="navbar-header">
				<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".greeting-collapse-class">
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>
				@Html.ActionLink("uLearn", "Index", "Home", null, new { @class = "navbar-brand" })
			</div>
			<div class="greeting-collapse-class navbar-collapse collapse">
				<ul class="top-navigation nav navbar-nav">
					@{
						var courseManager = WebCourseManager.Instance;
						var coursesIds = new HashSet<string>(User.GetControllableCoursesId().Select(c => c.ToLower()));
						var courses = courseManager.GetCourses().Where(course => coursesIds.Contains(course.Id.ToLower())).OrderBy(c => c.Title).ToList();
					}
					@if (User.IsSystemAdministrator())
					{
						<li class="dropdown">
							<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Администрирование <span class="caret"></span></a>
							<ul class="dropdown-menu">
								<li>@Html.ActionLink("Пользователи", "List", "Account", new { role = LmsRoles.SysAdmin }, null)</li>
								<li>@Html.ActionLink("Статистика", "SystemStatistics", "Analytics")</li>
								<li>@Html.ActionLink("Песочница C#", "Index", "Sandbox")</li>
								<li class="divider"></li>
								<li class="dropdown-header">Курсы <a href="@Url.Action("CourseList", "Admin")">создать<span class="glyphicon glyphicon-plus"></span></a></li>
								@CoursesDropdown(courses)
							</ul>
						</li>
					}
					else if (User.HasAccess(CourseRole.Instructor))
					{
						<li class="dropdown">
							<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Мои курсы <span class="caret"></span></a>
							<ul class="dropdown-menu">
								@CoursesDropdown(courses)
							</ul>
						</li>
					}

					@if (User.HasAccess(CourseRole.Instructor))
					{
						string courseId = null;
						try
						{
							courseId = Html.ViewContext.RouteData.Values["courseId"].ToString();
						}
						catch (Exception)
						{
							/* RouteData has no attribute 'courseId' */
							var controller = Html.ViewContext.RouteData.Values["controller"].ToString();
							if ((controller == "Admin" || controller == "Analytics" || controller == "Grader") &&
								Request.Params["courseId"] != null)
							{
								courseId = Request.Params["courseId"];
							}
						}
						@Html.Action("CourseInstructorNavbar", "Course", new { courseId })
					}
				</ul>
				@Html.Action("UserMenuPartial", "Account")
			</div>
		</div>
	</div>
	@RenderBody()

	@Html.Partial("_UlearnUpdatesInvitation")

	@Scripts.Render("~/main-js")
	@RenderSection("scripts", required: false)

	<script>
		$(function () {
			$(".load-content").each(function () {
				$(this).load($(this).data("url"));
			});
		});
	</script>
	
	@Html.Partial("_YandexMetrika")
</body>
</html>

@helper CoursesDropdown(List<Course> courses)
{
	foreach (var course in courses.Take(10))
	{
		<li>@Html.ActionLink(course.Title.TruncateWithEllipsis(40), "UnitStatistics", "Analytics", new { courseId = course.Id }, new { title = course.Title })</li>
	}
	if (courses.Count > 10)
	{
		<li><a href="@Url.Action("CourseList", "Admin")"><b>Все курсы</b></a></li>
	}
	if (courses.Count == 0)
	{
		<li>
			<b>Нет курсов.</b>
			@if (User.IsSystemAdministrator())
			{
				@Html.ActionLink("Создать", "CourseList", "Admin")
			}
		</li>
	}
}